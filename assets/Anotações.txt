Aula de Variáveis e Tipos

_Atribuindo Valores:

- Variáveis
var e let são escopos diferentes.
Var: escopo Global
Let: escopo de bloco
Hoisting: atribuir um valor a uma variável antes declarar.
Redeclaração
Reatribuir
camelCase: A maioria das declarações são utilizadas o metodo camelCase, 
onde se tem letras minusculas e maiúscula.

atribuição de valores:
case type:		example:
Original Variable as string	some awesome var
Camel Case		someAwesomeVar
Snake Case		some_awesome_var
Kebab Case		some-awesome-var
Pascal Case		SomeAwesomeVar
Upper Case Snake Case	SOME_AWESOME_VAR
=================================================
Exemplo de Case Type com camelCase

var firstName = 'João';
var lastName = 'Souza';


if(firstName === 'João'){
    var firstName = 'Pedro';
    let lastName = 'silva'; <!-- let fica invalidada por 
não ter sido declarada antes -->
}
    
console.log(firstName , lastName);

console responde com: 
$ node index.js
Pedro Souza
====================================================
- Constantes
Declaradas em SNAKE_UPPER_CASE;
Escopo de bloco;
NÃO faz hoisting;
não pode reatribuir;
não pode redeclarar 

		    VAR, LET E CONST

		var	    const		let
escopo	        Global ou local	    bloco		bloco	
redeclaração	sim	    não 		não
reatribuir		sim	    não		sim
hoisting		sim	   não		não

PESQUISAR: boas praticas em javascript, conveções de javascript, 
hoisting glossario;
___________________________________________________________

_Tipos:

-Estrutura de dados
Javascript é uma linguangem de tipagem dinâmica.
Antes de declarar um valor, você não pode especifica o TIPO dele.

>>let um = "um";
undefined
um
>>"um"
>>typeof um
"string"
>>um=1
1
>>typeof um
"number"
		          _  Primitive Types: numbers, strings, boolean,
			null, underfined
data types in js dividido em:
		           _ Composite/Non-Primitive Types:objects arrays

-strings
comumente utilizada para textos;
valores declarados entre aspas ou crases;(interpolação);
Iterabilidade;
Formatação;
Index de letras;

>>let nome ="João"
undefined
>>let sobrenome = "Pedro"
undefined
>>typeof nome
"string"
>>nome.concat(sobrenome)
"JoãoPedro"

>>nome
"João"
>>nome[1] 
"o"
>>nome.length  
4

-Numbers
Números inteiros ou decimal;
Declarado sem aspas;

- Booleans
verdadeiro ou falso;
validar condições;

-Arrays (vetores)
Listas iterável de elementos
Index começa no 0
Declado com os conchetes[ ]
 
-Object
Declarado com chaves { }
Estrutura tipo " chave e valor"

-Empty, undefined e null
Empty: não tem nenhum valor dentro.
Null: valor não existe.
Undefined: não atribuiu nenhum valor.

para saber mais: Javascript data types, entendendo os tipos e variáveis
em Javascript, estrutura de dados do Javascript, sintaxe e tipos.
___________________________________________________________
		ATIVIDADE PRÁTICA

-- Verificar palíndromo --
Palíndromo = " frase ou palavra que se pode ler, indiferentemente, da 
esquerda para direita ou vice - versa." 
(ex.: raiar, ama, ovo, radar)

1 - Verifique, de duas maneiras diferentes entre si, se uma String é um 
palíndromo.

-- Substituir números pares --

1- Troque todos os elementos pares e diferentes de zero de um array pelo
 número 0. Se o array for vazio, retorne -1.

Exemplo: Input -> [1, 3, 4, 6, 80, 33, 23, 90]

Output -> [1, 3, 0, 0, 0, 33, 23, 0]

Input -> []

Output -> -1









